## Checklist for v1.0.0

* Solo este archivo está en español.

* En el caso de las dependencias de Gradle, para la versión 1.0.0 de la biblioteca ya no actualizar ninguna (a menos que se especifique lo contrario),
  ya que las que se tienen ya se van a probar en el desarrollo, y para evitar posibles conflictos ya dejarlas como están, porque se actualizaron
  el 04/06/2023.

* ✔✔ Indica que el archivo/utilidad/carpeta ya está lista.

----------------------------------------------------------------------------------------------------------------------------------------------------------

- .git ✔✔
- .gradle ✔✔
- .idea ✔✔
- androidutils
    > Tod@ listo y verificado, solo falta:
        > Terminar Premium
        > Verificar los log de todos los invoked y ajustar mensaje como en premium
        > En el init de RateApp agregar un mensaje más claro, y quitar las IllegalStateException al cambiar un valor y solo mandar un warring o error al log
        > Verificar y quitar todos lo return log(), dejar el return en otra línea, esto por las reglas de proguard, ya que elimina las llamadas a log()
        > En RateApp, ver lo del contexto si se requiere el de la app, y ver lo de las shared preferences para si es posible no tener un objeto estático con la referencia
          o ajustar según se requiera luego de perminar Premium donde se estan abordando y tratando esos temas
- app
    > Terminar de desarrollar las actividades para probar las actividades pendientes, y en las que ya están verificar el manejo de
    excepciones y de valores que pueden ser incorrectos para poder probar las utilidades correctamente. En términos generales hay
    que hacer una revision general de toda la app y mejorarla y terminarla.
- build ✔✔
- docs
    > Verificar y mover si es posible a otra rama o ver donde acomodar, y actualizar los archivos, rutas y nombres.
- gradle ✔✔
- lintcheck ✔✔
- resources
    > Verificar y mover si es posible a otra rama o ver donde acomodar, y actualizar los archivos, rutas y nombres.
- Archivos del directorio raíz
    > Solo actualizar README.md, tod@ lo demás está listo.

- Una vez terminado eso, generar los nuevos javadoc y actualizar la documentación del proyecto, y generar un nuevo lanzamiento
en Google Play con la nueva versión de la biblioteca y de la app.

- Ver si agregar utilidad en toplevelfunction para manejar los log más fácilmente




































----------------------------------------------------------------------------------------------------------------------------------------------------------

Temporal, documentación de Share Utils, pasos a seguir para configurar.
1: Agregar en el manifest de la app: https://developer.android.com/training/secure-file-sharing/setup-sharing
<provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.jeovanimartinez.androidutils.app.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>
2. Agregar el arhcivo file_paths con la ruta de carpetas a compartir
<paths>
    <files-path
        name="androidutils_tempfiles"
        path="androidutils/tempfiles" />
</paths>
eso de arriba solo compartira el directorio privado de la app androidutils/tempfiles, usar path="." para compartir todos los directorios
de la carpeta privada de la app dentro de la carpeta files/
3. Asignar fileProviderAuthority del fileprovider, debe ser el mismo que se uso en el manifest
4. Agregar las queries en el manifest según el tipo de archivo a compartir, verificar ya que puede ser no necesario y solo necesitarse
cuando se quiere obtener info de las apps instaladas que manejan esos intents, y no cuando se quieren lanzar
  <queries>

        <!-- Reference: https://developer.android.com/training/package-visibility/declaring#intent-filter-signature -->

        <!-- Element to query for activities that handle SEND intent for share files -->
        <intent>
            <action android:name="android.intent.action.SEND" />
            <data android:mimeType="image/jpeg" />
        </intent>
        <intent>
            <action android:name="android.intent.action.SEND" />
            <data android:mimeType="image/png" />
        </intent>
        <intent>
            <action android:name="android.intent.action.SEND" />
            <data android:mimeType="image/webp" />
        </intent>

    </queries>
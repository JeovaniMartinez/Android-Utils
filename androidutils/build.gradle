// Android Utils Library [ Gradle Script ]

plugins {
    id "com.android.library"
    id "kotlin-android"
    id "org.jetbrains.dokka"
    id "maven-publish"
}

android {

    compileSdk 33

    defaultConfig {
        minSdkVersion 21 // Android 5 (Lollipop)

        targetSdkVersion 33

        versionCode androidUtilsVersionCode
        versionName androidUtilsVersionName

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        consumerProguardFiles "androidutils-lib-consumer-rules.pro" // These rules are embedded in the generated AAR and provided to the app that implements the library
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false // Keep always in false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro" // Don't add rules here, use consumerProguardFiles
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    namespace "com.jeovanimartinez.androidutils"
}

dependencies {

    // Allows access to new APIs on older API versions of the platform
    implementation "androidx.appcompat:appcompat:1.6.1"

    // Set of Kotlin extensions for Android Jetpack and other Android libraries
    implementation "androidx.core:core-ktx:1.10.1"

    // Constraint Layout (position and size widgets in a flexible way with relative positioning)
    implementation "androidx.constraintlayout:constraintlayout:2.1.4" // Required for design the layouts

    // Material Components for Android
    implementation "com.google.android.material:material:1.9.0" // Required for designing the layouts

    // Runtime interface to interact with the Google Play Store
    implementation "com.google.android.play:core-ktx:1.8.1" // Required for using Google Play In-App review API

    // Set of tools to express the open source software notices of libraries used in the apps
    implementation "com.google.android.gms:play-services-oss-licenses:17.0.1" // Required to display open source licenses in AboutApp

    // Google Play's billing system, enables to sell digital products and content in the apps
    implementation "com.android.billingclient:billing-ktx:6.0.1" // Required for the premium utilities

    // Libraries are required only for references. If they are used in the destination app, it must declare the dependencies
    compileOnly "com.google.firebase:firebase-analytics:21.3.0" // Used to reference Firebase Analytics
    compileOnly "com.google.firebase:firebase-crashlytics:18.3.7" // Used to reference Firebase Crashlytics

    // Lint check
    lintPublish project(":lintcheck") // The library includes the lint check module for verifications

}

// Documentation
dokkaHtml.configure {
    doFirst {
        // Current documentation is deleted before generating the new one
        delete rootProject.projectDir.toString() + "/docs/api-reference/android-utils-api-reference"
        println "Deleted android-utils-api-reference directory"
    }
    dokkaSourceSets {
        named("main") {
            moduleName.set("Android Utils")
            outputDirectory.set(file("../docs/api-reference/android-utils-api-reference"))
            noAndroidSdkLink.set(true)
            skipDeprecated.set(false)
        }
    }
    pluginsMapConfiguration.set(
            [
                    "org.jetbrains.dokka.base.DokkaBase": """{
                "footerMessage": "Copyright Â© 2020 - Present by Jeovani Martinez"
            }"""
            ]
    )
    doLast {
        // The library logo is copied to the documentation
        copy {
            from(rootProject.projectDir.toString() + "/resources/docs-images/dokka/logo-icon.svg")
            into(rootProject.projectDir.toString() + "/docs/api-reference/android-utils-api-reference/images")
        }
        println "Adjusted documentation logo"
    }
    // Documentation example: https://www.raywenderlich.com/30067669-documenting-kotlin-code-for-android-using-kdoc-and-dokka
}

// Publishing
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = "com.jeovanimartinez.androidutils"
                artifactId = "androidutils"
                version = androidUtilsVersionName
                pom {
                    name = "Android Utils"
                    description = "Set of utilities for Android app development."
                    url = "https://jeovanimartinez.github.io/Android-Utils/"
                    licenses {
                        license {
                            name = "Apache License 2.0"
                            url = "https://www.apache.org/licenses/LICENSE-2.0"
                        }
                    }
                }
            }
        }
    }
}

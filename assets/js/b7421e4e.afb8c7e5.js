"use strict";(self.webpackChunkandroid_utils_docs=self.webpackChunkandroid_utils_docs||[]).push([[107],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>m});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var c=n.createContext({}),d=function(e){var t=n.useContext(c),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(i),m=a,g=p["".concat(c,".").concat(m)]||p[m]||u[m]||r;return i?n.createElement(g,o(o({ref:t},s),{},{components:i})):n.createElement(g,o({ref:t},s))}));function m(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<r;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}p.displayName="MDXCreateElement"},9160:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=i(7462),a=(i(7294),i(3905));const r={id:"view-to-image",title:"View To Image",description:"Utility for convert views to images."},o=void 0,l={unversionedId:"library-utilities/view-to-image",id:"library-utilities/view-to-image",title:"View To Image",description:"Utility for convert views to images.",source:"@site/docs/library-utilities/view-to-image.md",sourceDirName:"library-utilities",slug:"/library-utilities/view-to-image",permalink:"/Android-Utils/docs/library-utilities/view-to-image",draft:!1,editUrl:"https://github.com/JeovaniMartinez/Android-Utils/edit/documentation/docs/library-utilities/view-to-image.md",tags:[],version:"current",frontMatter:{id:"view-to-image",title:"View To Image",description:"Utility for convert views to images."},sidebar:"mainSidebar",previous:{title:"Watermark",permalink:"/Android-Utils/docs/library-utilities/watermark"},next:{title:"About App",permalink:"/Android-Utils/docs/library-utilities/about-app"}},c={},d=[{value:'<a href="/reference/-android%20-utils/com.jeovanimartinez.androidutils.views.viewtoimage/-view-to-image/index.html" target="_blank"><b> Reference </b></a>',id:"-reference-",level:4},{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Considerations",id:"considerations",level:2},{value:"&gt; Padding and Margin",id:"-padding-and-margin",level:2},{value:"&gt; Exclude Children Views",id:"-exclude-children-views",level:2},{value:"- Hide",id:"--hide",level:3},{value:"- Crop Vertically",id:"--crop-vertically",level:3},{value:"- Crop Horizontally",id:"--crop-horizontally",level:3},{value:"- Crop All",id:"--crop-all",level:3}],s={toc:d};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"-reference-"},(0,a.kt)("a",{href:"/reference/-android%20-utils/com.jeovanimartinez.androidutils.views.viewtoimage/-view-to-image/index.html",target:"_blank"},(0,a.kt)("b",null,"[ Reference ]"))),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Utility for convert views to images. Works for any view and view groups, including layouts with all their children views."),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(1487).Z,alt:""})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Call the following function of the utility passing the configuration to generate the image of the view."),(0,a.kt)("blockquote",null,(0,a.kt)("h4",{parentName:"blockquote",id:"-configuration-parameters--"},(0,a.kt)("a",{href:"/reference/-android%20-utils/com.jeovanimartinez.androidutils.views.viewtoimage/-view-to-image/convert.html",target:"_blank"},(0,a.kt)("b",null,"[ Configuration Parameters  ]")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"val bitmap = ViewToImage.convert(\n    view = binding.rootLayout,\n    backgroundColor = getColorCompat(R.color.colorBackground),\n    backgroundCornerRadius = CornerRadius(10f).asDpToPx(context),\n    trimBorders = false,\n    padding = Padding(0f, 0f, 18f, 0f).asDpToPx(context),\n    margin = Margin(0f),\n    viewsToExclude = arrayListOf(\n        ExcludeView(binding.bottomSeparator, ExcludeMode.CROP_VERTICALLY),\n        ExcludeView(binding.termsAndPolicy, ExcludeMode.CROP_VERTICALLY),\n        ExcludeView(binding.openSourceLicenses, ExcludeMode.CROP_VERTICALLY),\n        ExcludeView(binding.closeBtn, ExcludeMode.CROP_VERTICALLY)\n    )\n)\n")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"considerations"},"Considerations"),(0,a.kt)("h2",{id:"-padding-and-margin"},"> Padding and Margin"),(0,a.kt)("p",null,"When converting the view to an image, a margin and padding can be specified, the margin is completely independent (and it will always be transparent),\nand the padding is applied within the specified background, for example:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(5824).Z,alt:""})),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"-exclude-children-views"},"> Exclude Children Views"),(0,a.kt)("p",null,"If the view to be converted to an image is a view group as a layout, by default the generated image includes all children views, however, it is\npossible to pass a configuration to exclude certain children views in different ways."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ExcludeMode enum defines the ways in which the child view can be excluded from the image."),(0,a.kt)("h4",{parentName:"blockquote",id:"-reference--1"},(0,a.kt)("a",{href:"/reference/-android%20-utils/com.jeovanimartinez.androidutils.views.viewtoimage.config/-exclude-mode/index.html",target:"_blank"},(0,a.kt)("b",null,"[ Reference ]"))),(0,a.kt)("hr",{parentName:"blockquote"}),(0,a.kt)("p",{parentName:"blockquote"},"ExcludeView define the configuration to exclude a child view from the image."),(0,a.kt)("h4",{parentName:"blockquote",id:"-reference--2"},(0,a.kt)("a",{href:"/reference/-android%20-utils/com.jeovanimartinez.androidutils.views.viewtoimage.config/-exclude-view/index.html",target:"_blank"},(0,a.kt)("b",null,"[ Reference ]")))),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The children views to exclude must belong directly to the view. For example, if the view is a Linear Layout, which has a Constraint Layout as child view,\nthe Constraint Layout can be excluded, but not its children views."))),(0,a.kt)("p",null,"To exemplify the ways in which a child view can be excluded, we will consider the following layout:"),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(7338).Z,alt:""})),(0,a.kt)("h3",{id:"--hide"},"- Hide"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ExcludeMode.HIDE")),(0,a.kt)("p",null,"In this mode, the space occupied by the child view is replaced by the background color."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"viewsToExclude = arrayListOf(\n    ExcludeView(demoButton, ExcludeMode.HIDE)\n)\n")),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(9840).Z,alt:""})),(0,a.kt)("h3",{id:"--crop-vertically"},"- Crop Vertically"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ExcludeMode.CROP_VERTICALLY")),(0,a.kt)("p",null,"In this mode, the image of the view is cropped vertically, deleting all the space occupied by the child view."),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(2596).Z,alt:""})),(0,a.kt)("h3",{id:"--crop-horizontally"},"- Crop Horizontally"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ExcludeMode.CROP_HORIZONTALLY")),(0,a.kt)("p",null,"In this mode, the image of the view is cropped horizontally, deleting all the space occupied by the child view."),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(4303).Z,alt:""})),(0,a.kt)("h3",{id:"--crop-all"},"- Crop All"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ExcludeMode.CROP_ALL")),(0,a.kt)("p",null,"In this mode, the image of the view is cropped vertically and horizontally, deleting all the space occupied by the child view."),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:i(2410).Z,alt:""})))}u.isMDXComponent=!0},1487:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img1-c3eecff276e9f09361dc9fdf68436b55.png"},5824:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img2-edcdafb114fecd49ede8588ba875a168.png"},7338:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img3-c39cd02d32fa6e5ca149d17205eec9c9.png"},9840:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img4-1b8c35e9c1f10bcbcf6af95b454995c6.png"},2596:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img5-fe466f0ca1a46cd4723c79b1f838e02c.png"},4303:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img6-e45719039fd8d07a46ec6d6ef91d6ec8.png"},2410:(e,t,i)=>{i.d(t,{Z:()=>n});const n=i.p+"assets/images/view-to-image-img7-b232cb5792acb12f071eed7331c0aca2.png"}}]);